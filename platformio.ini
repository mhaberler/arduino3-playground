[env]
monitor_filters = esp32_exception_decoder, direct
monitor_speed = 115200
upload_speed = 460800
build_type = debug

; bleeding edge Arduino 3.0 alpha -
; see https://github.com/platformio/platform-espressif32/issues/1211#issuecomment-1770625276
platform = https://github.com/Jason2866/platform-espressif32.git#Arduino/IDF5
framework = arduino
lib_deps = 
	https://github.com/mhaberler/M5GFX.git#develop
	m5stack/M5Unified@^0.1.10
	https://github.com/mhaberler/fmtlib#mah-10.1.1
	https://github.com/gabime/spdlog#v1.12.0
	lvgl/lvgl@^8.3.9
	https://github.com/h2zero/esp-nimble-cpp.git
build_flags       =
	-DEMBEDDED  ; for fmtlib
	-DSPDLOG_COMPILED_LIB ; for spdlog
	-DSPDLOG_FMT_EXTERNAL
	-DSPDLOG_NO_EXCEPTIONS
    -Wno-unused-variable   ;coding_standards
    -Wno-unused-but-set-variable
    -Wno-sign-compare
    -Wunreachable-code
    -Wall
    -Wextra
    -Wshadow
    -Wdouble-promotion
    -Wformat
    -Wnonnull

[lvgl_demo]
build_flags       =
	-DLVGL_DEMO		  ; selects demo
	-DLVGL_M5UNIFIED  ; selects glue code
	; -DTEST_NIMBLE
	; -DTEST_SPDLOG

[m5gfx_demo]
build_flags       =
	-DM5GFX_DEMO
	-DTEST_NIMBLE
	-DTEST_SPDLOG

[coreS3]
board = m5stack-cores3
debug_tool = esp-builtin
debug_init_break = tbreak app_main
debug_speed = 12000
build_flags =
	; ${options.build_flags}
	; ${library_defs.build_flags}
	; ${coding_standards.build_flags}
	-DBOARD_HAS_PSRAM
	-DARDUINO_USB_CDC_ON_BOOT=1
	-DCORE_DEBUG_LEVEL=5  ; show boot-time config
	-O0 -ggdb -g

[core2]
board = m5stack-core2
build_flags =
	-DBOARD_HAS_PSRAM
	-DCORE_DEBUG_LEVEL=5  ; show boot-time config
	-DSOC_LEDC_SUPPORT_FADE_STOP
	-O0 -ggdb -g

[altimeter_m5unified]
build_src_filter =
	+<**.*>
	+<../lvgl-m5unified/*.*>
	+<../altimeter-ui/export/**/*.*>
	+<../altimeter-ui/handlers/**/*.*>
build_src_flags =
	-Ilvgl-m5unified
 	-Ialtimeter-ui/export

[flowsensor_m5unified]
build_src_filter =
	+<**.*>
	+<../lvgl-m5unified/*.*>
	+<../flowsensor-ui/export/**/*.*>
	+<../flowsensor-ui/handlers/**/*.*>
build_src_flags =
	-Ilvgl-m5unified
 	-Iflowsensor-ui/export

[env:altimeter_m5unified_core2]
extends = altimeter_m5unified, core2
build_flags =
	${env.build_flags}
	${core2.build_flags}
	${lvgl_demo.build_flags}
	-DLV_CONF_PATH='${platformio.src_dir}/../lvgl-m5unified/lv_conf.h'

[env:flowsensor_m5unified_core2]
extends = flowsensor_m5unified, core2
build_flags =
	${env.build_flags}
	${core2.build_flags}
	${lvgl_demo.build_flags}
	-DLV_CONF_PATH='${platformio.src_dir}/../lvgl-m5unified/lv_conf.h'

[env:altimeter_m5unified_coreS3]
extends = altimeter_m5unified, coreS3
build_flags =
	${env.build_flags}
	${coreS3.build_flags}
	${lvgl_demo.build_flags}
	-DLV_CONF_PATH='${platformio.src_dir}/../lvgl-m5unified/lv_conf.h'

[env:flowsensor_m5unified_coreS3]
extends = flowsensor_m5unified, coreS3
build_flags =
	${env.build_flags}
	${coreS3.build_flags}
	${lvgl_demo.build_flags}
	-DLV_CONF_PATH='${platformio.src_dir}/../lvgl-m5unified/lv_conf.h'


[env:mgfx_core2]
lib_ignore = lvgl
extends = core2
build_flags =
	${env.build_flags}
	${core2.build_flags}
	${m5gfx_demo.build_flags}

[env:mgfx_coreS3]
lib_ignore = lvgl
extends = coreS3
build_flags =
	${env.build_flags}
	${coreS3.build_flags}
	${m5gfx_demo.build_flags}


